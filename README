plomrogue
=========

plomlompom tries to build his own roguelike. It doesn't do much yet (although
plomlompom has insanely ambitious long-term plans).

You can move around a player on an island and meet different enemies. You have 5
hitpoints to lose before death. Enemies start with different amounts of
hitpoints, depending on their species. Dead enemies become dirt, skeletons or
"magic meat" -- such objects can be collected, and "magic meat" can be consumed
to gain hitpoints (if allowed to lie on the ground for a while it may even
multiply ...). Note that different kinds of movements/actions take different
numbers of turns to finish.

Enemies' AI is very dumb so far: Each turn, they try to move towards their
shortest-path-wise nearest enemy (any animate being of a different species)
visible to them. If they see no enemy, they search for and consume "magic meat".

Every move of yours re-writes a file "savefile" that describes the new state of
dthe world, if more than 15 seconds have passed since its last writing. Once you
re-start the game, the game state is recreated from the "savefile" file. To
start over in a new world, simply delete this file.

System requirements / installation / running the game
-----------------------------------------------------

The game is expected to run on Linux systems that contain the ncurses library.
(It may also work on other Unix-like systems with ncurses, who knows.) Do the
following steps:

$ git clone https://github.com/plomlompom/plomrogue
$ cd plomrogue
$ ./redo
$ ./roguelike

(If you got a redo build system installed and in your $PATH, you could also do a
simple "redo" instead of "./redo". The ./redo script calls a simple partial
shell script implementation of redo stored below build/redo_scripts/, written by
Nils Dagsson Moskopp a.k.a. erlehmann.)

./redo generates two executables ./roguelike-server and ./roguelike-client.
./roguelike is a pre-existing shell script that merely executes both of them,
with the server as a background job. You can also ignore the script and start
the two by hand.

Client's keybindings and window management
------------------------------------------

Multiple windows may fill the screen. One of these will be selected as "active"
â€“ identified by dollar signs enclosing its title. Active windows may come with
window-specific keybindings. Furthermore, global keybindings are available no
matter what window is selected.

Hit "W" (per default global keybindings) to switch the active window to a view
that allows changing its geometry. One more hit on "W" switches the window to a
view that sports (and allows changing its) window-specific keybindings. (One
further "W" will return the window to its default, "normal" view.) The global
keybindings are visible (and can be changed) in the "Set global keys" window,
those of the window geometry configuration in the "Set window geometry keys"
window, and those of the window-specific keybindings configuration in the "Set
window keybinding keys" window; by default, the latter two are not visible, but
may be turned on by (per default keybindings) hitting the keys "F6" and "F7".

Keybindings and default window selection / visibilities / geometries are read
from the textfile ./confclient/interface_conf by default, or by another one
named by the -i command line option of the client. Some other default window
configurations are stored below ./confclient/single_windows/: "map", "info",
"inventory" and "log". Each of these opens up only a single window into the
client, filling up the entire terminal. This may be useful for running multiple
clients in parallel in multiple terminal windows that can be managed by one's
own window manager choice, instead of relying on plomrogue-client's bizarre
in-client window management.

Replay game recording
---------------------

Once you start a new world, every move of yours is recorded in a file called
"record". It gets overwritten when a new game world is started after deletion
of the "savefile" file. Run "./roguelike -s" to watch the current game's
recording from the beginning. Hit any player action key to increment turns (they
will not trigger the actions usually mapped to them, only repeat the actions
done at that point in the game as defined in the "record" file). Keys to manage
windows, scroll on the map and quit the program do their usual thing. Append a
number to the -s option (like "-s100") to start the recording at the respective
turn number.

Hacking / server internals and configuration
--------------------------------------------

The game world is set up and made subject to player commands by
./roguelike-server. It's controlled by commands explained in the file
./SERVER_COMMANDS. The server usually reads these from the files ./server/in
(written to by ./roguelike-client), ./confserver/world, ./record and ./savefile.

All source files are thoroughly documented to explain more details of
plomrogue's internals. The ./roguelike-server executable can be run with a -v
option for helpful debugging info (mostly: what messages the client sends to the
server). Server and client communicate via files in the ./server/ directory
(generated when the server is first run). The ./server/in file is read by the
server for newline-delimited commands. The ./server/out file contains server
messages to be read by clients. The ./server/worldstate file contains a
serialized representation of the game world's data as it is to be visible to
the player / the player's client.
